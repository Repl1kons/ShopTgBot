from aiogram import types
import config
import photo_hendler_two
from aiogram.types import LabeledPrice
from keyboards.Inline import Inline_keyboard

price_all = {
    "total_price": 0
}

price_a = {
    'total_price': 0
}


import sqlite3

async def add_to_cart(user_id, item_name, articul, selected_variant, quantity, price):
    conn = sqlite3.connect('data/bot_database.db')  # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    cursor = conn.cursor()

    # SQL-–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ –≤ –∫–æ—Ä–∑–∏–Ω—É
    cursor.execute("""
        INSERT INTO cart_items (user_id, item_name, articul, selected_variant, quantity, price) 
        VALUES (?, ?, ?, ?, ?, ?)
    """, (user_id, item_name, articul, selected_variant, quantity, price))

    conn.commit()
    conn.close()


async def show_cart(bot, message: types.Message):
    # cart_contents = ""
    # price_a["total_price"] = 0
    # for key,details in photo_hendler_two.shopping_cart.items():
    #     item_name,articul = key.split('_')
    #     selected_variant = details[0]
    #     quantity = details[2]
    #     price = details[3]
    #     item_total_price = quantity * price
    #     print(item_name)
    #     print(articul)
    #     print(quantity)
    #     print(price)
    #     price_a['total_price'] += item_total_price
    #
    #     cart_contents += f"{item_name}\n–ê—Ä—Ç–∏–∫—É–ª: {articul}\n –í–∞—Ä–∏–∞–Ω—Ç: {selected_variant}\n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {quantity}\n –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {price}\n –í —Å—É–º–º–µ: {item_total_price}\n\n"
    user_id = message.from_user.id
    conn = sqlite3.connect('data/bot_database.db')
    cursor = conn.cursor()

    query = "SELECT item_name, articul, selected_variant, quantity, price FROM cart_items WHERE user_id = ?"
    cursor.execute(query,(user_id,))
    cart_items = cursor.fetchall()
    conn.close()

    # –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä–∑–∏–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    cart_contents = ""
    total_price = 0
    amount_price = 0
    for item in cart_items:
        print(cart_items)
        amount_price = item[3] * item[4]
        total_price += item[4] * item[3]
        print(total_price)
        cart_contents += f"*–¢–æ–≤–∞—Ä:* {item[0]}\n–ê—Ä—Ç–∏–∫—É–ª: {item[1]}\n–í–∞—Ä–∏–∞–Ω—Ç: {item[2]}\n–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {item[3]}\n–¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É: {item[4]}\n–¶–µ–Ω–∞: {amount_price}\n\n"

    if cart_contents:
        # await clear_user_cart(user_id)
        cart_contents += f"–û–±—â–∞—è —Ü–µ–Ω–∞: {total_price} —Ä—É–±–ª–µ–π"
        await bot.send_message(user_id, f"*üõí –í–∞—à–∞ –ö–æ—Ä–∑–∏–Ω–∞*\n\n{cart_contents}", reply_markup = Inline_keyboard.keyboard_basket, parse_mode='Markdown')
    else:
        await bot.send_message(user_id,"–∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞")





    # if cart_contents:
    #     cart_contents += f"\n\n–û–±—â–∞—è —Ü–µ–Ω–∞: {price_a['total_price']} —Ä—É–±–ª–µ–π"  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â—É—é —Ü–µ–Ω—É
    #     await message.answer(f"*üõí –í–∞—à–∞ –ö–æ—Ä–∑–∏–Ω–∞*\n\n{cart_contents}", reply_markup=Inline_keyboard.keyboard_basket, parse_mode='Markdown')
    # else:
    #     await message.answer("–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")

async def clear_user_cart(user_id):
    """ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö """
    conn = sqlite3.connect('data/bot_database.db')
    cursor = conn.cursor()
    cursor.execute("DELETE FROM cart_items WHERE user_id = ?", (user_id,))
    conn.commit()
    conn.close()


async def process_callback(bot, callback_query):
    # print(f'price_a: {price_a["total_price"]}')
    if callback_query.data == 'clear_cart':
        await clear_user_cart(callback_query.message.chat.id)
        await bot.send_message(callback_query.message.chat.id, "–ö–æ—Ä–∑–∏–Ω–∞ –æ—á–∏—â–µ–Ω–∞.")
        price_a.clear()
        print(price_a)
